/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIs;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tyler Heather has edited code - copied and changed code from
 * cleaningView...
 */
public class MaintView extends javax.swing.JFrame {

    /**
     * Creates new form MaintView
     */
    public MaintView() throws ClassNotFoundException, SQLException {
        initComponents();
        model = (DefaultTableModel) table.getModel();
        Class.forName("org.sqlite.JDBC");
        connection = DriverManager.getConnection("jdbc:sqlite:Hotel.db");
    }

    public void load() throws SQLException {
        Statement statement = connection.createStatement();
        setTableData(statement.executeQuery("select * from maint_request order by request_id DESC"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        searchSSN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        searchRmNum = new javax.swing.JTextField();
        searchSort = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        refresh = new javax.swing.JButton();
        searchResDate = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        searchSubDate = new javax.swing.JTextField();
        searchRequestID = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        searchItemID = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchDescr = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        insertSSN = new javax.swing.JTextField();
        insertRmNum = new javax.swing.JTextField();
        schedule = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        insertRequestID = new javax.swing.JTextField();
        insertItemID = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        insertSubDate = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        insertResDate = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        insertDescr = new javax.swing.JTextArea();
        jLabel24 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        updateRmNum = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        updateSSN = new javax.swing.JTextField();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        updateRequestID = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        updateItemID = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        updateSubDate = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        updateResDate = new javax.swing.JFormattedTextField();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        updateDescr = new javax.swing.JTextArea();

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request ID", "SSN", "Room Number", "Unique Item ID", "Description", "Submit Date", "Resolution Date"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table);

        jLabel8.setText("Scheduled Maintenance Requests");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(360, 360, 360)
                        .addComponent(jLabel8)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        jLabel1.setText("Resolution Date (yyyy-mm-dd)");

        jLabel2.setText("SSN");

        jLabel3.setText("Room Number");

        searchSort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Request ID Descending", "Request ID Ascending", "Submit Date Descending", "Submit Date Ascending", "SSN Descending", "SSN Ascending", "Room Number Descending", "Room Number Ascending", "Unqiue Item ID Descending", "Unique Item ID Ascending", "Resolution Date Descending", "Resolution Date Ascending" }));
        searchSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSortActionPerformed(evt);
            }
        });

        jLabel4.setText("Sort By");

        refresh.setText("Refresh");
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
        });

        searchResDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        searchResDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchResDateActionPerformed(evt);
            }
        });

        jLabel13.setText("Submit Date (yyyy-mm-dd)");

        searchRequestID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchRequestIDActionPerformed(evt);
            }
        });

        jLabel15.setText("Request ID#");

        jLabel17.setText("Unique Item ID");

        searchItemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchItemIDActionPerformed(evt);
            }
        });

        jLabel20.setText("Description");

        searchDescr.setColumns(20);
        searchDescr.setRows(5);
        jScrollPane1.setViewportView(searchDescr);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchRequestID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchRmNum, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchItemID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchSubDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchResDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(192, 192, 192)
                                .addComponent(refresh))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchSort, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(searchRequestID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(searchSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(searchRmNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(searchItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(searchSubDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(searchResDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(refresh, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(searchSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addGap(52, 52, 52)))))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Schedule New Maintenance Request"));
        jPanel3.setPreferredSize(new java.awt.Dimension(800, 200));

        schedule.setText("Schedule");
        schedule.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scheduleMouseClicked(evt);
            }
        });
        schedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleActionPerformed(evt);
            }
        });

        jLabel6.setText("SSN");

        jLabel7.setText("Room Number");

        jLabel22.setText("Request ID#");

        insertRequestID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertRequestIDActionPerformed(evt);
            }
        });

        insertItemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertItemIDActionPerformed(evt);
            }
        });

        jLabel23.setText("Unique Item ID");

        jLabel14.setText("Submit Date (yyyy-mm-dd)");

        jLabel12.setText("Resolution Date (yyyy-mm-dd)");

        insertResDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        insertResDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertResDateActionPerformed(evt);
            }
        });

        insertDescr.setColumns(20);
        insertDescr.setRows(5);
        jScrollPane2.setViewportView(insertDescr);

        jLabel24.setText("Description");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(insertSubDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(insertResDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(schedule))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(insertRequestID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(insertSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(insertRmNum, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(insertItemID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(insertRequestID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(insertSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(insertRmNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(insertItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(schedule)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(insertSubDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(insertResDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))))
                .addGap(80, 80, 80))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected Row"));

        jLabel10.setText("SSN");

        jLabel11.setText("Room Number");

        update.setText("Update");
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
        });

        delete.setText("Delete");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });

        updateRequestID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRequestIDActionPerformed(evt);
            }
        });

        jLabel25.setText("Request ID#");

        jLabel26.setText("Unique Item ID");

        updateItemID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateItemIDActionPerformed(evt);
            }
        });

        jLabel16.setText("Submit Date (yyyy-mm-dd)");

        jLabel18.setText("Resolution Date (yyyy-mm-dd)");

        updateResDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));
        updateResDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateResDateActionPerformed(evt);
            }
        });

        jLabel27.setText("Description");

        updateDescr.setColumns(20);
        updateDescr.setRows(5);
        jScrollPane4.setViewportView(updateDescr);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel27)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(update)
                            .addGap(18, 18, 18)
                            .addComponent(delete))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel25)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(updateRequestID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(74, 74, 74)
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(updateSSN, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(updateRmNum, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(57, 57, 57)
                            .addComponent(jLabel26)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(updateItemID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateSubDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateResDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(update)
                            .addComponent(delete)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(updateSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(updateRmNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)
                            .addComponent(updateRequestID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)
                            .addComponent(updateItemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(updateSubDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18)
                            .addComponent(updateResDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 900, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void scheduleMouseClicked(java.awt.event.MouseEvent evt) {
        String insertQuery = "insert into maint_request(request_id, essn, rm_no, uniq_item_id, "
                + "descr, submittalDate, resolutionDate) values (?, ?, ?, ?, ?, ?, ?)";
        try {
            PreparedStatement statement = connection.prepareStatement(insertQuery);
            statement.clearParameters();
            if (Integer.parseInt(insertSSN.getText()) > 0 && Integer.parseInt(insertSSN.getText()) < 1000000000 && //checks to see if it is a valid ssn
                    Integer.parseInt(insertRmNum.getText()) > 0 && Integer.parseInt(insertRmNum.getText()) < 11000 && //checks to see if it is a valid room
                    Integer.parseInt(insertRequestID.getText()) > 0 && Integer.parseInt(insertRequestID.getText()) < 100000 && //checks to see if it is a valid request id from 1-999999
                    Integer.parseInt(insertItemID.getText()) > 0 && Integer.parseInt(insertItemID.getText()) < 10000) {          //checks to see if it is a valid itemid from 1-9999
                statement.setObject(1, insertRequestID.getText());
                statement.setObject(2, insertSSN.getText());
                statement.setObject(3, insertRmNum.getText());
                statement.setObject(4, insertItemID.getText());
                statement.setObject(5, insertDescr.getText());
                statement.setObject(6, insertSubDate.getText());
                statement.setObject(7, insertResDate.getText());

                statement.executeUpdate();
            } else {
                JOptionPane.showMessageDialog(null, "There is an error in the most recent scheduling request.");
            }

            String query = "select * from maint_request";
            statement = connection.prepareStatement(query);
            setTableData(statement.executeQuery());
        } catch (SQLException ex) {
            Logger.getLogger(CleaningView.class.getName()).log(Level.SEVERE, null, ex);
        }
        insertRequestID.setText("");
        insertSSN.setText("");
        insertRmNum.setText("");
        insertItemID.setText("");
        insertDescr.setText("");
        insertSubDate.setText("");
        insertResDate.setText("");
    }

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        updateRequestID.setText((String) model.getValueAt(table.getSelectedRow(), 0));
        updateSSN.setText((String) model.getValueAt(table.getSelectedRow(), 1));
        updateRmNum.setText((String) model.getValueAt(table.getSelectedRow(), 2));
        updateItemID.setText((String) model.getValueAt(table.getSelectedRow(), 3));
        updateDescr.setText((String) model.getValueAt(table.getSelectedRow(), 4));
        updateSubDate.setText((String) model.getValueAt(table.getSelectedRow(), 5));
        updateResDate.setText((String) model.getValueAt(table.getSelectedRow(), 6));
    }//GEN-LAST:event_tableMouseClicked

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
        String requestID = searchRequestID.getText();
        String ssn = searchSSN.getText();
        String num = searchRmNum.getText();
        String itemID = searchItemID.getText();
        String descr = searchDescr.getText();
        String subDate = searchSubDate.getText();
        String resDate = searchResDate.getText();

        ArrayList<String> params = new ArrayList<>();
        String query = generateMaintSearchQuery(params, requestID, ssn, num, itemID, descr, subDate, resDate);
        try {
            PreparedStatement statement = connection.prepareStatement(query);
            statement.clearParameters();
            for (int i = 0; i < params.size(); i++) {
                statement.setObject(i + 1, params.get(i));
            }
            ResultSet results = statement.executeQuery();
            setTableData(results);

        } catch (SQLException ex) {
            Logger.getLogger(CleaningView.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        searchRequestID.setText("");
        searchSSN.setText("");
        searchRmNum.setText("");
        searchItemID.setText("");
        searchDescr.setText("");
        searchResDate.setText("");
        searchSubDate.setText("");
    }//GEN-LAST:event_refreshMouseClicked

    /**
     * It wouldn't let me delete...
    private void scheduleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scheduleMouseClicked

    }//GEN-LAST:event_scheduleMouseClicked
*
     */

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
        if (table.getSelectedRow() >= 0) {
            String updateQuery = "update maint_request set request_id = ?, essn = ?, rm_no = ?, uniq_item_id = ?, descr = ?, submittalDate = ?, resolutionDate = ? "
                    + "where request_id = " + ((String) model.getValueAt(table.getSelectedRow(), 0))
                    + " and essn = '" + ((String) model.getValueAt(table.getSelectedRow(), 1))
                    + "' and rm_no = " + ((String) model.getValueAt(table.getSelectedRow(), 2))
                    + " and uniq_item_id = " + ((String) model.getValueAt(table.getSelectedRow(), 3))
                    + " and descr = '" + ((String) model.getValueAt(table.getSelectedRow(), 4))
                    + "' and submittalDate = '" + ((String) model.getValueAt(table.getSelectedRow(), 5))
                    + "' and resolutionDate = '" + ((String) model.getValueAt(table.getSelectedRow(), 6)) + "'";

            try {
                PreparedStatement statement = connection.prepareStatement(updateQuery);
                statement.clearParameters();
                if (Integer.parseInt(updateSSN.getText()) > 0 && Integer.parseInt(updateSSN.getText()) < 1000000000 && //checks to see if it is a valid ssn
                        Integer.parseInt(updateRmNum.getText()) > 0 && Integer.parseInt(updateRmNum.getText()) < 11000 && //checks to see if it is a valid room
                        Integer.parseInt(updateRequestID.getText()) > 0 && Integer.parseInt(updateRequestID.getText()) < 100000 && //checks to see if it is a valid request id from 1-999999
                        Integer.parseInt(updateItemID.getText()) > 0 && Integer.parseInt(updateItemID.getText()) < 10000) {          //checks to see if it is a valid itemid from 1-9999
                    statement.setObject(1, updateRequestID.getText());
                    statement.setObject(2, updateSSN.getText());
                    statement.setObject(3, updateRmNum.getText());
                    statement.setObject(4, updateItemID.getText());
                    statement.setObject(5, updateDescr.getText());
                    statement.setObject(6, updateSubDate.getText());
                    statement.setObject(7, updateResDate.getText());
                    statement.executeUpdate();
                } else {
                    JOptionPane.showMessageDialog(null, "There is an error in the most recent update request.");

                }

                String query = "select * from maint_request";
                statement = connection.prepareStatement(query);
                setTableData(statement.executeQuery());
                statement.close();
            } catch (SQLException ex) {
                Logger.getLogger(CleaningView.class.getName()).log(Level.SEVERE, null, ex);
            }
            updateRequestID.setText("");
            updateSSN.setText("");
            updateRmNum.setText("");
            updateItemID.setText("");
            updateDescr.setText("");
            updateSubDate.setText("");
            updateResDate.setText("");
        }
    }//GEN-LAST:event_updateMouseClicked

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        if (table.getSelectedRow() >= 0) {
            String deleteQuery = "delete from maint_request "
                    + "where request_id = " + ((String) model.getValueAt(table.getSelectedRow(), 0))
                    + " and essn = '" + ((String) model.getValueAt(table.getSelectedRow(), 1))
                    + "' and rm_no = " + ((String) model.getValueAt(table.getSelectedRow(), 2))
                    + " and uniq_item_id = " + ((String) model.getValueAt(table.getSelectedRow(), 3))
                    + " and descr = '" + ((String) model.getValueAt(table.getSelectedRow(), 4))
                    + "' and submittalDate = '" + ((String) model.getValueAt(table.getSelectedRow(), 5))
                    + "' and resolutionDate = '" + ((String) model.getValueAt(table.getSelectedRow(), 6)) + "'";

            try {
                PreparedStatement statement = connection.prepareStatement(deleteQuery);
                statement.executeUpdate();

                String query = "select * from maint_request";
                statement = connection.prepareStatement(query);
                setTableData(statement.executeQuery());
                statement.close();
            } catch (SQLException ex) {
                Logger.getLogger(CleaningView.class.getName()).log(Level.SEVERE, null, ex);
            }
            updateRequestID.setText("");
            updateSSN.setText("");
            updateRmNum.setText("");
            updateItemID.setText("");
            updateDescr.setText("");
            updateSubDate.setText("");
            updateResDate.setText("");
        }
    }//GEN-LAST:event_deleteMouseClicked

    final private DefaultTableModel model;
    final private Connection connection;

    private void setTableData(ResultSet rs) throws SQLException {
        model.setRowCount(0);
        while (rs.next()) {
            String[] tuple = {
                rs.getString("request_id"),
                rs.getString("essn"),
                rs.getString("rm_no"),
                rs.getString("uniq_item_id"),
                rs.getString("descr"),
                rs.getString("submittalDate"),
                rs.getString("resolutionDate")
            };

            model.addRow(tuple);
        }
    }

    private String getOrder() {
        switch (searchSort.getSelectedIndex()) {
            case 1:
                return "request_id ASC";
            case 2:
                return "submittalDate DESC";
            case 3:
                return "submittalDate ASC";
            case 4:
                return "essn DESC";
            case 5:
                return "essn ASC";
            case 6:
                return "rm_no DESC";
            case 7:
                return "rm_no ASC";
            case 8:
                return "uniq_item_id DESC";
            case 9:
                return "uniq_item_id ASC";
            case 10:
                return "resolutionDate DESC";
            case 11:
                return "resolutionDate ASC";
            default:
                return "request_id DESC";
        }
    }

    private String generateMaintSearchQuery(ArrayList<String> params, String requestID,
            String ssn, String num, String itemID, String descr, String subDate, String resDate) {
        ArrayList<String> clauses = new ArrayList<>();

        String query = "select m.* from maint_request as m";
        if (!requestID.equals("")) {
            clauses.add("request_id = ?");
            params.add(requestID);
        }
        if (!ssn.equals("")) {
            clauses.add("essn = ?");
            params.add(ssn);
        }
        if (!num.equals("")) {
            clauses.add("rm_no = ?");
            params.add(num);
        }
        if (!itemID.equals("")) {
            clauses.add("uniq_item_id = ?");
            params.add(itemID);
        }
        if (!descr.equals("")) {
            clauses.add("descr = ?");
            params.add(descr);
        }
        if (!subDate.equals("")) {
            clauses.add("submittalDate = ?");
            params.add(subDate);
        }
        if (!resDate.equals("")) {
            clauses.add("resolutionDate = ?");
            params.add(resDate);
        }
        if (!clauses.isEmpty()) {
            query += " where " + String.join(" and ", clauses);
        }
        query += " order by " + getOrder();
        return query;
    }


    private void searchRequestIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchRequestIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchRequestIDActionPerformed

    private void searchItemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchItemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchItemIDActionPerformed

    private void searchResDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchResDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchResDateActionPerformed

    private void insertRequestIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertRequestIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insertRequestIDActionPerformed

    private void insertItemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertItemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insertItemIDActionPerformed

    private void insertResDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertResDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_insertResDateActionPerformed

    private void updateRequestIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRequestIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateRequestIDActionPerformed

    private void updateItemIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateItemIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateItemIDActionPerformed

    private void updateResDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateResDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateResDateActionPerformed

    private void searchSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchSortActionPerformed

    private void scheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scheduleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JTextArea insertDescr;
    private javax.swing.JTextField insertItemID;
    private javax.swing.JTextField insertRequestID;
    private javax.swing.JFormattedTextField insertResDate;
    private javax.swing.JTextField insertRmNum;
    private javax.swing.JTextField insertSSN;
    private javax.swing.JTextField insertSubDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton refresh;
    private javax.swing.JButton schedule;
    private javax.swing.JTextArea searchDescr;
    private javax.swing.JTextField searchItemID;
    private javax.swing.JTextField searchRequestID;
    private javax.swing.JFormattedTextField searchResDate;
    private javax.swing.JTextField searchRmNum;
    private javax.swing.JTextField searchSSN;
    private javax.swing.JComboBox searchSort;
    private javax.swing.JTextField searchSubDate;
    private javax.swing.JTable table;
    private javax.swing.JButton update;
    private javax.swing.JTextArea updateDescr;
    private javax.swing.JTextField updateItemID;
    private javax.swing.JTextField updateRequestID;
    private javax.swing.JFormattedTextField updateResDate;
    private javax.swing.JTextField updateRmNum;
    private javax.swing.JTextField updateSSN;
    private javax.swing.JTextField updateSubDate;
    // End of variables declaration//GEN-END:variables
}

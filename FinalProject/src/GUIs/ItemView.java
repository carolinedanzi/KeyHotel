/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIs;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tyler
 */
public class ItemView extends javax.swing.JFrame {

    /**
     * Creates new form ItemView
     *
     * @throws java.lang.ClassNotFoundException
     * @throws java.sql.SQLException
     */
    public ItemView() throws ClassNotFoundException, SQLException {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();
        Class.forName("org.sqlite.JDBC");
        connection = DriverManager.getConnection("jdbc:sqlite:Hotel.db");
    }

    public void load() throws SQLException {
        Statement s = connection.createStatement();
        ResultSet rs = s.executeQuery("select name from item_type");
        ArrayList<String> types = new ArrayList<>();
        while (rs.next()) {
            types.add(rs.getString("name"));
        }
        itemTypes.setListData(types.toArray());

        rs = s.executeQuery("select name from rm_type");
        types.clear();
        while (rs.next()) {
            types.add(rs.getString("name"));
        }
        roomTypes.setListData(types.toArray());

        rs = s.executeQuery("select rm_num from room");
        types.clear();
        while (rs.next()) {
            types.add(rs.getString("rm_num"));
        }
        roomNumbers.setModel(new DefaultComboBoxModel(types.toArray()));

        rs = s.executeQuery("select (select sum(cost) from item, "
                + "item_type where item_type_id = it_id) as sum, i.*, name from item "
                + "as i, item_type where i.item_type_id = it_id");
        setTableData(rs);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        selectItemType = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemTypes = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        foundRmTypes = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        roomTypes = new javax.swing.JList();
        selectRmType = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        roomNumbers = new javax.swing.JComboBox();
        selectRmNum = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        foundItemTypes = new javax.swing.JList();
        count = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cost = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Type", "Cost", "Room_No"
            }
        )
        {public boolean isCellEditable(int row, int col) {return false;}}
    );
    jScrollPane1.setViewportView(jTable1);

    jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Item Types"));

    selectItemType.setText("Select");
    selectItemType.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            selectItemTypeMouseClicked(evt);
        }
    });

    itemTypes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
    jScrollPane2.setViewportView(itemTypes);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(138, 138, 138)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(selectItemType)))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(selectItemType))
    );

    jLabel1.setText("Unique Items");

    jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected Item Found in:"));

    jScrollPane3.setViewportView(foundRmTypes);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3))
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(99, 99, 99)
                    .addComponent(jLabel4)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jLabel3.setText("Total Item Count:");

    jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Room Types"));

    jScrollPane4.setViewportView(roomTypes);

    selectRmType.setText("Select");
    selectRmType.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            selectRmTypeMouseClicked(evt);
        }
    });

    jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

    jLabel5.setText("Room Numbers");

    selectRmNum.setText("Select");
    selectRmNum.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            selectRmNumMouseClicked(evt);
        }
    });

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel5Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel5)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(roomNumbers, 0, 137, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(selectRmNum)
            .addContainerGap())
    );
    jPanel5Layout.setVerticalGroup(
        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
            .addContainerGap(7, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(roomNumbers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(selectRmNum))
            .addContainerGap())
    );

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(selectRmType))
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(selectRmType)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Selected Room Type Includes:"));

    jScrollPane5.setViewportView(foundItemTypes);

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane5)
            .addContainerGap())
    );
    jPanel4Layout.setVerticalGroup(
        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel4Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
            .addContainerGap())
    );

    jLabel6.setText("Total Cost:");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGap(0, 0, Short.MAX_VALUE)
            .addComponent(jLabel1)
            .addGap(343, 343, 343))
        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 754, Short.MAX_VALUE)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel6)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel6)
                .addComponent(cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectItemTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectItemTypeMouseClicked
        int type_id = itemTypes.getSelectedIndex();

        if (type_id != -1) {
            String item_query = "select (select sum(cost) from item, "
                    + "item_type where item_type_id = ? and item_type_id = "
                    + "it_id) as sum, i.*, name from item as i, item_type where "
                    + "i.item_type_id = ? and i.item_type_id = it_id";
            
            String room_query = "select name from rm_type, type_has where "
                    + "i_type_id = ? and r_type_id = rt_id";
            try {
                PreparedStatement statement = connection.prepareStatement(item_query);
                statement.clearParameters();
                statement.setInt(1, type_id);
                statement.setInt(2, type_id);

                setTableData(statement.executeQuery());
                
                statement = connection.prepareStatement(room_query);
                statement.clearParameters();
                statement.setInt(1, type_id);
                setFoundRmTypeList(statement.executeQuery());
            } catch (SQLException ex) {
                Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
            }    }//GEN-LAST:event_selectItemTypeMouseClicked

    }
    
    private void selectRmTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectRmTypeMouseClicked
        int type_id = roomTypes.getSelectedIndex();

        if (type_id != -1) {
            String itemQuery = "select (select sum(cost) from item, "
                    + "type_has, item_type where r_type_id = ? and i_type_id = "
                    + "item_type_id and item_type_id = it_id) as sum, i.*, name "
                    + "from item as i, type_has, item_type where r_type_id = ? "
                    + "and i_type_id = i.item_type_id and i.item_type_id = it_id";
            
            String roomQuery = "select name from item_type, type_has where r_type_id = ? and i_type_id = it_id";
            try {
                PreparedStatement statement = connection.prepareStatement(itemQuery);
                statement.clearParameters();
                statement.setInt(1, type_id);
                statement.setInt(2, type_id);
                setTableData(statement.executeQuery());
                
                statement = connection.prepareStatement(roomQuery);
                statement.clearParameters();
                statement.setInt(1, type_id);
                setFoundItemTypeList(statement.executeQuery());
            } catch (SQLException ex) {
                Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
            }    } 
    }//GEN-LAST:event_selectRmTypeMouseClicked

    private void selectRmNumMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectRmNumMouseClicked
        String rm_num = (String) roomNumbers.getSelectedItem();
        String itemQuery = "select (select sum(cost) from item, "
                + "item_type where room_no = ? and item_type_id = it_id) as sum, "
                + "i.*, name from item as i, item_type where i.room_no = ? and "
                + "i.item_type_id = it_id";
        
        String roomQuery = "select name from item_type, room, type_has where rm_num = ? and rm_type_id = r_type_id and it_id = i_type_id";
        
        try {
            PreparedStatement statement = connection.prepareStatement(itemQuery);
            statement.clearParameters();
            statement.setString(1, rm_num);
            statement.setString(2, rm_num);
            setTableData(statement.executeQuery());
            
            statement = connection.prepareStatement(roomQuery);
            statement.clearParameters();
            statement.setString(1, rm_num);
            setFoundItemTypeList(statement.executeQuery());            
        } catch (SQLException ex) {
            Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_selectRmNumMouseClicked
    
    
    private void setFoundItemTypeList(ResultSet rs) throws SQLException {
        ArrayList<String> types = new ArrayList<>();
        while (rs.next()) {
            types.add(rs.getString("name"));
        }
        foundItemTypes.setListData(types.toArray());
    }
    
    private void setFoundRmTypeList(ResultSet rs) throws SQLException {
        ArrayList<String> types = new ArrayList<>();
        while (rs.next()) {
            types.add(rs.getString("name"));
        }
        foundRmTypes.setListData(types.toArray());
    }
    
    private void setTableData(ResultSet rs) throws SQLException {
        
        model.setRowCount(0);
        double sum = 0;
        while (rs.next()) {
            if (rs.isFirst()) {
                sum = rs.getDouble("sum");
            }
            String[] tuple = {
                rs.getString("unique_item_id"), 
                rs.getString("name"),
                rs.getString("cost"), 
                rs.getString("room_no")
            };
            model.addRow(tuple);
        }
        count.setText(Integer.toString(model.getRowCount()));
        cost.setText(Double.toString(sum));
    }

    final private DefaultTableModel model;
    final private Connection connection;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cost;
    private javax.swing.JTextField count;
    private javax.swing.JList foundItemTypes;
    private javax.swing.JList foundRmTypes;
    private javax.swing.JList itemTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox roomNumbers;
    private javax.swing.JList roomTypes;
    private javax.swing.JButton selectItemType;
    private javax.swing.JButton selectRmNum;
    private javax.swing.JButton selectRmType;
    // End of variables declaration//GEN-END:variables
}
